generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Bus {
  id            Int                  @id @default(autoincrement())
  name          String
  description   String               @default("")
  color         String               @default("#000000")
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  isWeekend     Boolean?
  tag           String?
  isVisible     Boolean              @default(true)
  operatingDays BusOperatingDay[]
  favUsers      FavoriteBus[]
  routes        Routes[]
  serviceInfo   ServiceInformation[]
  stops         Stops[]              @relation("BusToStops")
}

model Stops {
  id          Int            @id @default(autoincrement())
  name        String
  latitude    Float          @default(0)
  longitude   Float          @default(0)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  description String         @default("")
  tag         String?
  favUsers    FavoriteStop[]
  routes      Routes[]
  buses       Bus[]          @relation("BusToStops")
}

model Routes {
  id        Int       @id @default(autoincrement())
  busId     Int
  stopId    Int
  index     Int
  deptTime  DateTime
  arriTime  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bus       Bus       @relation(fields: [busId], references: [id], onDelete: Cascade)
  stop      Stops     @relation(fields: [stopId], references: [id], onDelete: Cascade)

  @@index([busId])
  @@index([stopId])
}

model FavoriteStop {
  id        Int      @id @default(autoincrement())
  userId    String
  stopId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  priority  Int
  stop      Stops    @relation(fields: [stopId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([stopId])
}

model FavoriteBus {
  id        Int      @id @default(autoincrement())
  userId    String
  busId     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  priority  Int
  bus       Bus      @relation(fields: [busId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([busId])
}

model Manager {
  id     Int    @id @default(autoincrement())
  userId String
}

model BusOperatingDay {
  id        Int      @id @default(autoincrement())
  busId     Int
  day       DateTime
  isWeekly  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bus       Bus      @relation(fields: [busId], references: [id], onDelete: Cascade)
}

model ServiceInformation {
  content   String
  busId     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hash      String
  title     String
  bus       Bus      @relation(fields: [busId], references: [id], onDelete: Cascade)

  @@id([hash, busId])
}
