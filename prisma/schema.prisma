generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Bus {
  id          Int           @id @default(autoincrement())
  name        String
  tag         String?
  description String        @default("")
  color       String        @default("#000000")
  isVisible   Boolean       @default(true)
  isWeekend   Boolean?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  favUsers    FavoriteBus[]
  routes      Routes[]
  stops       Stops[]      
  operatingDays BusOperatingDay[]
}

model Stops {
  id        Int            @id @default(autoincrement())
  name      String
  tag       String?
  description String        @default("")
  latitude  Float          @default(0)
  longitude Float          @default(0)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  favUsers  FavoriteStop[]
  routes    Routes[]
  buses     Bus[]          
}

model Routes {
  id        Int       @id @default(autoincrement())
  busId     Int
  stopId    Int
  index     Int
  deptTime  DateTime
  arriTime  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  bus       Bus       @relation(fields: [busId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  stop      Stops     @relation(fields: [stopId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([busId])
  @@index([stopId])
}

model FavoriteStop {
  id        Int      @id @default(autoincrement())
  userId    String
  stopId    Int
  priority   Int      
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  stop      Stops    @relation(fields: [stopId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([stopId])
}

model FavoriteBus {
  id        Int      @id @default(autoincrement())
  userId    String
  busId     Int
  priority   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bus       Bus      @relation(fields: [busId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([busId])
}

model Manager {
  id     Int    @id @default(autoincrement())
  userId String
}

model BusOperatingDay {
  id        Int      @id @default(autoincrement())
  busId     Int
  day       DateTime
  isWeekly  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bus       Bus      @relation(fields: [busId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}